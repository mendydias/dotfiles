# Ref https://wiki.hyprland.org/Configuring/Workspace-Rules/
# "Smart gaps" / "No gaps when only"
# uncomment all if you wish to use that.
# workspace = w[tv1], gapsout:0, gapsin:0
# workspace = f[1], gapsout:0, gapsin:0
# windowrulev2 = bordersize 0, floating:0, onworkspace:w[tv1]
# windowrulev2 = rounding 0, floating:0, onworkspace:w[tv1]
# windowrulev2 = bordersize 0, floating:0, onworkspace:f[1]
# windowrulev2 = rounding 0, floating:0, onworkspace:f[1]

# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
# See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules

# Example windowrule v1
# windowrule = float, ^(kitty)$

# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$

# Ignore maximize requests from apps. You'll probably like this.
windowrulev2 = suppressevent maximize, class:.*

# Fix some dragging issues with XWayland
windowrulev2 = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0

# Clipse window rules
windowrulev2 = float,class:(clipse) # ensure you have a floating window class set if you want this behavior
windowrulev2 = size 622 652,class:(clipse) # set the size of the window as necessary

# yazi
windowrulev2 = float,class:(yazi) # ensure you have a floating window class set if you want this behavior
windowrulev2 = size 1024 680,class:(yazi) # set the size of the window as necessary

# btop
windowrulev2 = float,class:(btop) # ensure you have a floating window class set if you want this behavior
windowrulev2 = size 1024 750,class:(btop) # set the size of the window as necessary

# calcure
windowrulev2 = float,class:(calcure) # ensure you have a floating window class set if you want this behavior
windowrulev2 = size 1300 750,class:(calcure) # set the size of the window as necessary

# fastfetch
windowrulev2 = float,class:(fastfetch) # ensure you have a floating window class set if you want this behavior
windowrulev2 = size 390 480,class:(fastfetch) # set the size of the window as necessary
